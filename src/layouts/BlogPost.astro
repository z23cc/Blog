---
import BaseLayout from "./Base.astro";
import BlogHero from "@/components/blog/Hero.astro";
import TOC from "@/components/blog/TOC.astro";
import WebMentions from "@/components/blog/webmentions/index.astro";
import type { Post } from "@/lib/interfaces";
import type { Heading } from "@/types";
import PostComments from "@/components/blog/PostComments.astro";
import { REFERENCES } from "@/constants";
import ReferencesSection from "@/components/blog/references/ReferencesSection.astro";
import Icon from "@/components/Icon.astro";

interface Props {
	post: Post;
	ogImage?: string;
	headings: Heading[];
	shouldUseCache: boolean;
}

const { post, ogImage, headings, shouldUseCache } = Astro.props;

REFERENCES
	? headings.push({
			text: "Interlinked Content",
			slug: "autogenerated-interlinked-content",
			depth: 1,
		})
	: headings;

const socialImage = ogImage ? ogImage : `/og-image/${post.Slug}.png`;
const articleDate = new Date(post.Date).toISOString();
---

<BaseLayout
	meta={{ title: post.Title, description: post.Excerpt, articleDate, ogImage: socialImage }}
>
	<div class="max-w-[708px] sm:mr-20 print:mr-auto print:max-w-full">
		<article class="break-words" data-pagefind-body>
			<div id="blog-hero"><BlogHero post={post} /></div>
			<div class="mt-8">
				<slot />
				{/* Post body content */}
				<hr class="divider bg-accent/30 mx-auto my-4 h-0.5 w-full rounded-sm border-none" />
				{REFERENCES && <ReferencesSection post={post} shouldUseCache={shouldUseCache} />}
			</div>
		</article>
		{!!headings.length && <TOC headings={headings} />}
	</div>
	<div class="max-w-[708px] sm:mr-20 print:hidden">
		<aside class="" data-pagefind-ignore="all">
			<WebMentions />
			<PostComments post={post} />
		</aside>
	</div>
	<button
		id="to-top-btn"
		class="fixed end-4 bottom-20 z-30 flex h-10 w-10 translate-y-28 cursor-pointer items-center justify-center rounded-full border-2 border-transparent bg-zinc-200 text-3xl opacity-0 transition-all duration-300 hover:border-zinc-400 data-[show=true]:translate-y-0 data-[show=true]:opacity-100 sm:end-8 sm:bottom-8 sm:h-12 sm:w-12 dark:bg-zinc-700 print:hidden"
		aria-label="Back to Top"
		data-show="false"
	>
		<Icon name={"to-top"} class="h-6 w-6" aria-label="Go Back to Top" stroke-linecap="round" />
	</button>
</BaseLayout>

<script>
	document.addEventListener("DOMContentLoaded", function () {
		const scrollBtn = document.getElementById("to-top-btn");
		const targetHeader = document.getElementById("blog-hero");

		function callback(entries) {
			entries.forEach((entry) => {
				if (entry.target === targetHeader) {
					scrollBtn.dataset.show = (!entry.isIntersecting).toString();
				}
			});
		}

		scrollBtn.addEventListener("click", () => {
			document.documentElement.scrollTo({ top: 0, behavior: "smooth" });
		});
		const observer = new IntersectionObserver(callback);
		observer.observe(targetHeader);
	});
</script>
