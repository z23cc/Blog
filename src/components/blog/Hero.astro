---
import FormattedDate from "@/components/FormattedDate.astro";
import type { Post } from "@/lib/interfaces";
import { getNotionColorToTailwindColor } from "@/lib/style-helpers";
import { areDifferentDates } from "@/utils/date";
import { getNavLink } from "@/lib/blog-helpers";
import Icon from "@/components/Icon.astro";
import { slugify } from "@/utils";

interface Props {
	post: Post;
}

const { post } = Astro.props;
//FIXME: figure out what this remarkPluginFrontmatter is
// const { remarkPluginFrontmatter } = await render();

const dateTimeOptions: Intl.DateTimeFormatOptions = {
	month: "long",
};
---

<h1 class="title mb-3 sm:mb-1" data-pagefind-filter=`collections:${post.Collection}`>
	{post.Title}
</h1>
{post.Excerpt && <q class="mb-2 block italic">{post.Excerpt}</q>}
<div class="flex max-w-full flex-wrap items-center gap-x-3 gap-y-2">
	<p class="font-semibold">
		<FormattedDate date={new Date(post.Date)} dateTimeOptions={dateTimeOptions} />
	</p>
	{
		post.Date && post.LastUpdatedDate && areDifferentDates(post.Date, post.LastUpdatedDate) && (
			<span class="bg-quote/10 text-quote rounded-lg p-1">
				{"Last Updated:"}
				<FormattedDate
					class="ms-1"
					date={new Date(post.LastUpdatedDate)}
					dateTimeOptions={dateTimeOptions}
				/>
			</span>
		)
	}
</div>
{
	post.Tags && post.Tags.length > 0 && (
		<div class="mt-2">
			<Icon
				class="me-1 inline-block h-4 w-4"
				name={"tag-outline"}
				aria-hidden="true"
				focusable="false"
			/>
			{post.Tags.map((tag, i) => (
				<>
					<a
						class={`mt-1 inline-block rounded-lg px-2 ${getNotionColorToTailwindColor(
							tag.color + "-background",
							true,
						)}`}
						aria-label={`View more blogs with the tag ${tag.name}`}
						href={getNavLink("/tags/" + slugify(tag.name) + "/")}
						data-pagefind-filter="tags"
					>
						{tag.name}
					</a>{" "}
				</>
			))}
		</div>
	)
}
<hr class="divider bg-accent/30 mx-auto my-4 h-1 w-full rounded-sm border-none" />
