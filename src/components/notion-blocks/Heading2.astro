---
import * as interfaces from "@/lib/interfaces.ts";
import { buildHeadingId } from "@/lib/blog-helpers.ts";
import RichText from "@/components/notion-blocks/RichText.astro";
import NotionBlocks from "@/components/NotionBlocks.astro";
import Icon from "@/components/Icon.astro";

export interface Props {
	block: interfaces.Block;
	renderChildren?: boolean; // Make this optional
	setId?: boolean;
}

const { block, renderChildren = true, setId = true } = Astro.props;

const id = buildHeadingId(block.Heading2);
---

{
	block.Heading2.IsToggleable ? (
		<details class="toggle mt-6 mb-1">
			<summary class="flex max-w-full cursor-pointer list-none gap-2">
				<div>
					<Icon
						name={"toggle-triangle"}
						class="rotate-svg mt-[3px] h-6 w-6 shrink-0 transition-all duration-300"
						aria-label="Toggle open/close"
						stroke="currentColor"
						stroke-linecap="round"
						stroke-linejoin="round"
						stroke-width="2"
					/>
				</div>
				<span class="inline">
					<h3
						class={`toggle-h3 mt-6 mb-1 inline cursor-pointer text-xl font-semibold ${setId ? "hasId" : "noId"}`}
						id={setId ? id : undefined}
						onclick="
        var fullUrl = `${window.location.origin}${window.location.pathname}#${id}`;
        navigator.clipboard.writeText(fullUrl);
        window.history.pushState(null, '', fullUrl);
        document.getElementById(`${id}`).scrollIntoView({ behavior: 'smooth' });
    "
					>
						{block.Heading2.RichTexts.map((richText: interfaces.RichText) => (
							<RichText richText={richText} blockID={block.Id} />
						))}
					</h3>
				</span>
			</summary>
			<div class="pl-8">
				{block.Heading2.Children && renderChildren && (
					<NotionBlocks
						blocks={block.Heading2.Children}
						renderChildren={renderChildren}
						setId={setId}
					/>
				)}
			</div>
		</details>
	) : (
		<h3
			class={`mt-6 mb-1 cursor-pointer text-xl font-semibold ${setId ? "hasId" : "noId"}`}
			id={setId ? id : undefined}
			onclick="
        var fullUrl = `${window.location.origin}${window.location.pathname}#${id}`;
        navigator.clipboard.writeText(fullUrl);
        window.history.pushState(null, '', fullUrl);
        document.getElementById(`${id}`).scrollIntoView({ behavior: 'smooth' });"
		>
			{block.Heading2.RichTexts.map((richText: interfaces.RichText) => (
				<RichText richText={richText} blockID={block.Id} />
			))}
		</h3>
	)
}

<style>
	h3.hasId::before {
		content: "#";
		position: absolute;
		color: color-mix(in srgb, var(--color-accent) 50%, transparent);
		margin-left: -1.5rem;
		display: inline-block;
		opacity: 0; /* Start with invisible content */
		transition: opacity 0.3s ease; /* Transition the opacity */
	}
	h3.noId::before {
		display: none;
	}

	h3.hasId:hover::before {
		opacity: 1; /* Make the content visible on hover */
	}
	h3.hasId.toggle-h3::before {
		margin-left: -2.5rem;
	}
	details[open] > summary > div > .shrink-0.rotate-svg {
		transform: rotate(90deg);
	}
	summary::-webkit-details-marker {
		display: none;
	}
</style>
