---
import { getTweet } from "./api";
import EmbeddedTweet from "./twitter-theme/EmbeddedTweet.astro";
import TweetNotFound from "./twitter-theme/TweetNotFound.astro";
import type { TwitterComponents } from "./twitter-theme/types";
interface Props {
	id: string;
	components?: TwitterComponents;
	fetchOptions?: RequestInit;
	onError?: ((error: any) => any) | undefined;
}

let TWEET_TOMBSTONE = "TweetTombstone";

const { id, components, fetchOptions, onError } = Astro.props;
let error;
const tweet = id
	? await getTweet(id, fetchOptions).catch((err) => {
			if (onError) {
				error = onError(err);
			} else {
				console.error(err);
				error = err;
			}
		})
	: undefined;
---

{
	tweet && tweet.__typename != TWEET_TOMBSTONE ? (
		<EmbeddedTweet tweet={tweet!} components={components} />
	) : null
}
